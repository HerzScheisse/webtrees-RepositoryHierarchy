<?php

declare(strict_types=1);

namespace Jefferson49\Webtrees\Module\RepositoryHierarchyNamespace;

use Fisharebest\Webtrees\Elements\AbstractXrefElement;
use Fisharebest\Webtrees\Gedcom;
use Fisharebest\Webtrees\GedcomRecord;
use Fisharebest\Webtrees\Registry;
use Fisharebest\Webtrees\Services\IndividualFactsService;
use Fisharebest\Webtrees\Services\LinkedRecordService;
use Fisharebest\Webtrees\Services\ModuleService;
use Fisharebest\Webtrees\Session;
use Fisharebest\Webtrees\Tree;
use Illuminate\Support\Collection;

/**
 * @var string $gedcom
 * @var string $parent e.g. "INDI:BIRT:DATE"
 * @var Tree   $tree
 */

$module_service = new ModuleService();
$repository_hierarchy = $module_service->findByName(RepositoryHierarchy::activeModuleName());

$linked_record_service = new LinkedRecordService();
$individual_facts_service = new IndividualFactsService($linked_record_service, $module_service);


//Check if individual or family view and wether editable
//Decide whether to show copy source citation icon

if ((Session::get('last_page_name') === "individual.php") && Session::has('last_page_parameter')){
    $individual  = Registry::individualFactory()->make(Session::get('last_page_parameter'), $tree);
    $showCopySourceCitationIcon = $individual->canEdit() && boolval($repository_hierarchy->getPreference(RepositoryHierarchy::PREF_ENABLE_COPY_PASTE_CITATIONS, '0'));
    $xref = $individual->xref();
    $facts = $individual->facts();
    $family_facts = $individual_facts_service->familyFacts($individual, new Collection);
    $facts = $facts->merge($family_facts);
    $xref_type = 'INDI';
}
elseif ((Session::get('last_page_name') === "family.php") && Session::has('last_page_parameter')){
    $family  = Registry::familyFactory()->make(Session::get('last_page_parameter'), $tree);
    $showCopySourceCitationIcon = $family->canEdit() && boolval($repository_hierarchy->getPreference(RepositoryHierarchy::PREF_ENABLE_COPY_PASTE_CITATIONS, '0'));
    $xref = $family->xref();
    $facts = $family->facts();
    $xref_type = 'FAM';
}
else {
    $showCopySourceCitationIcon = false;
    $facts = [];
    $xref = '';
    $xref_type = '';
}

//Check that count of occurances in facts is only one
//Also evaluate position of source citation within all citations in the fact

$fact_id = '';
$count_citations_in_different_facts = 0;
$position = 0;
$matches = [];

foreach ($facts as $fact) {

    $fact_tag = $fact->tag();

    if (str_starts_with($parent, $fact->tag())) {

        $fact_gedcom = $fact->gedcom();

        if (str_contains($fact->gedcom(), $gedcom)) {
            $related_fact = $fact;
            $fact_id = $fact->id();
            $count_citations_in_different_facts++;

            //reg exp from: fact-sources.phtml
            preg_match_all('/\n(2 SOUR\b.*(?:\n[^2].*)*)/', $fact->gedcom(), $matches, PREG_PATTERN_ORDER);
        }    
    }
}

$citation_position = 0;

if (isset($matches[1])) {
    $matched_citations =  $matches[1];
    $number_of_citations = sizeof($matched_citations);

    for ($i = 0; $i < sizeof($matched_citations); $i++) {
        //if (str_starts_with($gedcom, $matched_citations[$i])) {
        if ($gedcom === $matched_citations[$i]) {
            $citation_position = $i + 1;
        }
    }
}
else{ 
    $number_of_citations = 0;
}

//Decide whether to show icons to delete or move up/down citations
$showDeleteSourceCitationIcon = boolval($repository_hierarchy->getPreference(RepositoryHierarchy::PREF_ENABLE_DELETE_CITATIONS, '0')) 
    && ($count_citations_in_different_facts === 1);

$showMoveUpSourceCitationIcon = boolval($repository_hierarchy->getPreference(RepositoryHierarchy::PREF_ENABLE_SORT_CITATIONS, '0'))
    && ($count_citations_in_different_facts === 1) && ($number_of_citations > 1) && ($citation_position > 1);

$showMoveDownSourceCitationIcon = boolval($repository_hierarchy->getPreference(RepositoryHierarchy::PREF_ENABLE_SORT_CITATIONS, '0')) 
    && ($count_citations_in_different_facts === 1) && ($number_of_citations > 1) && ($citation_position < $number_of_citations);

$hierarchy = explode(':', $parent);

// Merge CONT records onto their parent line.
$gedcom = preg_replace('/\n\d CONT ?/', "\r", $gedcom);

preg_match_all('/^(\d+) (\w+) ?(.*)/m', $gedcom, $matches);
[, $levels, $tags, $values] = $matches;
$levels   = array_map(static fn (string $x): int => (int) $x, $levels);
$keys     = array_keys($levels);
$elements = [];

$private_level = PHP_INT_MAX;

foreach ($keys as $key) {
    $hierarchy[$levels[$key]] = $tags[$key];
    $full_tag                 = implode(':', array_slice($hierarchy, 0, 1 + $levels[$key]));
    $elements[$key]           = Registry::elementFactory()->make($full_tag);

    if ($elements[$key] instanceof AbstractXrefElement && preg_match('/^@(' . Gedcom::REGEX_XREF . ')@$/', $values[$key], $match) === 1) {
        $record = Registry::gedcomRecordFactory()->make($match[1], $tree);

        if ($record instanceof GedcomRecord && !$record->canShow()) {
            $private_level = min($private_level, $levels[$key]);
        }
    }

    if ($levels[$key] >= $private_level) {
        $values[$key] = '';
    } else {
        $private_level = PHP_INT_MAX;
    }
}

?>

<?php if ($showCopySourceCitationIcon) : ?>
    <?= view(RepositoryHierarchy::viewsNamespace() . '::edit/icon-source-citation-copy', [
        'tree'              => $tree, 
        'xref'              => $xref, 
        'gedcom'            => $gedcom,
        ]) ?>
<?php endif ?>
<?php if ($showDeleteSourceCitationIcon) : ?>
    <?= view(RepositoryHierarchy::viewsNamespace() . '::edit/icon-source-citation-delete', [
        'tree'              => $tree, 
        'xref'              => $xref, 
        'fact_id'           => $fact_id, 
        'xref_type'         => $xref_type, 
        'gedcom'            => $gedcom,
        ]) ?>
<?php endif ?>
<?php if ($showMoveUpSourceCitationIcon) : ?>
    <?= view(RepositoryHierarchy::viewsNamespace() . '::edit/icon-source-citation-move', [
        'tree'              => $tree, 
        'xref'              => $xref, 
        'fact_id'           => $fact_id, 
        'xref_type'         => $xref_type, 
        'gedcom'            => $gedcom, 
        'matched_citations' => $matched_citations,
        'old_position'      => $citation_position, 
        'new_position'      => $citation_position - 1,
        ]) ?>
<?php endif ?>
<?php if ($showMoveDownSourceCitationIcon) : ?>
    <?= view(RepositoryHierarchy::viewsNamespace() . '::edit/icon-source-citation-move', [
        'tree'              => $tree, 
        'xref'              => $xref, 
        'fact_id'           => $fact_id, 
        'xref_type'         => $xref_type, 
        'gedcom'            => $gedcom, 
        'matched_citations' => $matched_citations,
        'old_position'      => $citation_position,
        'new_position'      => $citation_position + 1,
        ]) ?>
<?php endif ?>